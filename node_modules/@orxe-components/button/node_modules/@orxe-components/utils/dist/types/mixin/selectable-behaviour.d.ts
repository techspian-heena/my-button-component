declare type Constructor<T> = new (...args: any[]) => T;
export default function SelectableBehaviour<T extends Constructor<any>>(Base: T): {
    new (...args: any[]): {
        [x: string]: any;
        selected: number;
        orientation: any;
        activatedElem: any;
        selectedClass: string;
        customElementSelector: any;
        automaticActivation: boolean;
        activated: any;
        readonly selectableItemLength: number;
        readonly selectableItems: any[];
        readonly focusedIndex: number;
        selectActiveElement(): void;
        _setSelectedClass(): void;
        _removeSelectedClass(): void;
        selectedChanged(index: number): void;
        _removeFocusFromAllItems(): void;
        addEvents(): void;
        onClick(element: any): void;
        _handleOnTapEvent(event: any): void;
        onKeyDown(element: any): void;
        _handleEnterEvent(): void;
        _handleArrowKeysEvent(key: number, e: Event): void;
        selectItem(index: number, e: Event, nextItem: boolean): void;
        _setFocusOnItem(index: number): void;
        _checkForActionIndex(index: number, nextItem: boolean): number;
        onBlur(): void;
        onFocus(): void;
        _setA11yAttributes(element: any): void;
        updated(attributeList: any): void;
    };
} & T;
export {};
